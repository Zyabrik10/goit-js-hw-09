{"mappings":"AACA,MAAMA,EAAcC,SAASC,cAAc,sBAGrCC,EAAYF,SAASC,cAAc,mBACnCE,EAAaH,SAASC,cAAc,oBACpCG,EAAeJ,SAASC,cAAc,sBACtCI,EAAeL,SAASC,cAAc,sBAEtCK,EAAU,CACZC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAQC,GACJ,MAAMC,GAAc,IAAIJ,MAAOK,UACzBC,EAAcH,EAAc,GAAGE,UAErC,GAAIC,GAAeF,EAGf,OAFAG,SAASC,OAAOC,QAAQ,2CACxBpB,EAAYqB,UAAW,GAI3BrB,EAAYqB,UAAW,EAEvB,MAAMC,EAAQC,aAAY,KACtB,MAAMC,GAAc,IAAIb,MAAOK,UACzBS,EAAeR,EAAcO,EAC7BE,EAgDlB,SAAmBC,GAEf,MAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAGNE,EAAOC,KAAKC,MAAMP,EAAKI,GAEvBI,EAAQF,KAAKC,MAAMP,EAAMI,EAAOD,GAEhCM,EAAUH,KAAKC,MAAMP,EAAOI,EAAOD,EAAQD,GAE3CQ,EAAUJ,KAAKC,MAAMP,EAAQI,EAAOD,EAAQD,EAAUD,GAE5D,MAAO,C,KAAEI,E,MAAMG,E,QAAOC,E,QAASC,E,CAhENC,CAAUb,GAE3B,GAAIA,GAAgB,EAGhB,OAFAc,cAAcjB,QACdJ,SAASC,OAAOqB,QAAQ,iBAIxBd,EAASM,KAAO,GAChB7B,EAAUsC,YAAc,IAAMf,EAASM,KACjCN,EAASM,MAAQ,GACvB7B,EAAUsC,YAAcf,EAASM,KACR,IAAlBN,EAASM,OAChB7B,EAAUsC,YAAc,MAGxBf,EAASS,MAAQ,GACjB/B,EAAWqC,YAAc,IAAMf,EAASS,MAClCT,EAASS,OAAS,GACxB/B,EAAWqC,YAAcf,EAASS,MACR,IAAnBT,EAASS,QAChB/B,EAAWqC,YAAc,MAGzBf,EAASU,QAAU,GACnB/B,EAAaoC,YAAc,IAAMf,EAASU,QACpCV,EAASU,SAAW,GAC1B/B,EAAaoC,YAAcf,EAASU,QACR,IAArBV,EAASU,UAChB/B,EAAaoC,YAAc,MAG3Bf,EAASW,QAAU,GACnB/B,EAAamC,YAAc,IAAMf,EAASW,QACpCX,EAASW,SAAW,GAC1B/B,EAAamC,YAAcf,EAASW,QACR,IAArBX,EAASW,UAChB/B,EAAamC,YAAc,KAAI,GAGpC,I,GAKXC,UAAU,mBAAoBnC","sources":["src/js/02-timer.js"],"sourcesContent":["// start button\nconst timerButton = document.querySelector('button[data-start]');\n\n// timer value\nconst daysValue = document.querySelector('span[data-days]');\nconst hoursValue = document.querySelector('span[data-hours]');\nconst minutesValue = document.querySelector('span[data-minutes]');\nconst secondsValue = document.querySelector('span[data-seconds]');\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const curruntTime = new Date().getTime();\n        const choosedTime = selectedDates[0].getTime();\n\n        if (choosedTime <= curruntTime) {\n            Notiflix.Notify.failure(\"Please choose a date in the future\");\n            timerButton.disabled = true;\n            return;\n        }\n\n        timerButton.disabled = false;\n\n        const timer = setInterval(()=>{\n            const curruntTime = new Date().getTime();\n            const timeLeftinMs = choosedTime - curruntTime;\n            const timeLeft = convertMs(timeLeftinMs);\n\n            if (timeLeftinMs <= 0) {\n                clearInterval(timer);\n                Notiflix.Notify.success(\"Time has left\");\n                return;\n            }\n\n            if (timeLeft.days < 10){\n                daysValue.textContent = '0' + timeLeft.days;\n            }else if (timeLeft.days >= 10){\n                daysValue.textContent = timeLeft.days;\n            } else if (timeLeft.days === 0){\n                daysValue.textContent = '00';\n            }\n\n            if (timeLeft.hours < 10){\n                hoursValue.textContent = '0' + timeLeft.hours;\n            }else if (timeLeft.hours >= 10){\n                hoursValue.textContent = timeLeft.hours;\n            } else if (timeLeft.hours === 0){\n                hoursValue.textContent = '00';\n            }\n\n            if (timeLeft.minutes < 10){\n                minutesValue.textContent = '0' + timeLeft.minutes;\n            }else if (timeLeft.minutes >= 10){\n                minutesValue.textContent = timeLeft.minutes;\n            } else if (timeLeft.minutes === 0){\n                minutesValue.textContent = '00';\n            }\n\n            if (timeLeft.seconds < 10){\n                secondsValue.textContent = '0' + timeLeft.seconds;\n            }else if (timeLeft.seconds >= 10){\n                secondsValue.textContent = timeLeft.seconds;\n            } else if (timeLeft.seconds === 0){\n                secondsValue.textContent = '00';\n            }\n            \n        }, 1000);\n    },\n  };\n\n  // init date picker\nflatpickr('#datetime-picker', options);\n\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }"],"names":["$40d383fb392a7037$var$timerButton","document","querySelector","$40d383fb392a7037$var$daysValue","$40d383fb392a7037$var$hoursValue","$40d383fb392a7037$var$minutesValue","$40d383fb392a7037$var$secondsValue","$40d383fb392a7037$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","curruntTime1","getTime","choosedTime","Notiflix","Notify","failure","disabled","timer","setInterval","curruntTime","timeLeftinMs","timeLeft","ms","second","minute","hour","day","days","Math","floor","hours","minutes","seconds","$40d383fb392a7037$var$convertMs","clearInterval","success","textContent","flatpickr"],"version":3,"file":"02-timer.62469d09.js.map"}
{"mappings":"AACA,MAAMA,EAAcC,SAASC,cAAc,sBAGrCC,EAAYF,SAASC,cAAc,mBACnCE,EAAaH,SAASC,cAAc,oBACpCG,EAAeJ,SAASC,cAAc,sBACtCI,EAAeL,SAASC,cAAc,sBAG5C,IAAIK,EACAC,EAEJ,MAAMC,EAAU,CACZC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAQC,GACJ,MAAMC,GAAc,IAAIJ,MAAOK,UAG/B,GAFAV,EAAcQ,EAAc,GAAGE,UAE3BV,GAAeS,EAGf,OAFAE,SAASC,OAAOC,QAAQ,2CACxBrB,EAAYsB,UAAW,GAI3BtB,EAAYsB,UAAW,C,GAK/BC,UAAU,mBAAoBd,GAG9BT,EAAYwB,iBAAiB,SAAS,KAC9BjB,GAAOkB,cAAclB,GACzB,MAAMmB,EAAalB,EAEnBD,EAAQoB,aAAY,KAChB,MAAMV,GAAc,IAAIJ,MAAOK,UACzBU,EAAeF,EAAaT,EAC5BY,EA2Cd,SAAmBC,GAEf,MAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAGNE,EAAOC,KAAKC,MAAMP,EAAKI,GAEvBI,EAAQF,KAAKC,MAAMP,EAAMI,EAAOD,GAEhCM,EAAUH,KAAKC,MAAMP,EAAOI,EAAOD,EAAQD,GAE3CQ,EAAUJ,KAAKC,MAAMP,EAAQI,EAAOD,EAAQD,EAAUD,GAE5D,MAAO,C,KAAEI,E,MAAMG,E,QAAOC,E,QAASC,E,CA3DVC,CAAUb,GAE3B,GAAIA,GAAgB,EAGhB,OAFAH,cAAclB,QACdY,SAASC,OAAOsB,QAAQ,iBAIxBb,EAASM,KAAO,GAChBhC,EAAUwC,YAAc,IAAMd,EAASM,KACjCN,EAASM,MAAQ,GACvBhC,EAAUwC,YAAcd,EAASM,KACR,IAAlBN,EAASM,OAChBhC,EAAUwC,YAAc,MAGxBd,EAASS,MAAQ,GACjBlC,EAAWuC,YAAc,IAAMd,EAASS,MAClCT,EAASS,OAAS,GACxBlC,EAAWuC,YAAcd,EAASS,MACR,IAAnBT,EAASS,QAChBlC,EAAWuC,YAAc,MAGzBd,EAASU,QAAU,GACnBlC,EAAasC,YAAc,IAAMd,EAASU,QACpCV,EAASU,SAAW,GAC1BlC,EAAasC,YAAcd,EAASU,QACR,IAArBV,EAASU,UAChBlC,EAAasC,YAAc,MAG3Bd,EAASW,QAAU,GACnBlC,EAAaqC,YAAc,IAAMd,EAASW,QACpCX,EAASW,SAAW,GAC1BlC,EAAaqC,YAAcd,EAASW,QACR,IAArBX,EAASW,UAChBlC,EAAaqC,YAAc,KAAI,GAGpC,IAAK","sources":["src/js/02-timer.js"],"sourcesContent":["// start button\nconst timerButton = document.querySelector('button[data-start]');\n\n// timer value\nconst daysValue = document.querySelector('span[data-days]');\nconst hoursValue = document.querySelector('span[data-hours]');\nconst minutesValue = document.querySelector('span[data-minutes]');\nconst secondsValue = document.querySelector('span[data-seconds]');\n\n// init timer\nlet timer;\nlet choosedTime;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const curruntTime = new Date().getTime();\n        choosedTime = selectedDates[0].getTime();\n\n        if (choosedTime <= curruntTime) {\n            Notiflix.Notify.failure(\"Please choose a date in the future\");\n            timerButton.disabled = true;\n            return;\n        }\n\n        timerButton.disabled = false;\n    },\n  };\n\n  // init date picker\nflatpickr('#datetime-picker', options);\n\n// init timer button\ntimerButton.addEventListener('click', ()=>{\n    if (timer) clearInterval(timer);\n    const futureTime = choosedTime;\n\n    timer = setInterval(()=>{\n        const curruntTime = new Date().getTime();\n        const timeLeftinMs = futureTime - curruntTime;\n        const timeLeft = convertMs(timeLeftinMs);\n\n        if (timeLeftinMs <= 0) {\n            clearInterval(timer);\n            Notiflix.Notify.success(\"Time has left\");\n            return;\n        }\n\n        if (timeLeft.days < 10){\n            daysValue.textContent = '0' + timeLeft.days;\n        }else if (timeLeft.days >= 10){\n            daysValue.textContent = timeLeft.days;\n        } else if (timeLeft.days === 0){\n            daysValue.textContent = '00';\n        }\n\n        if (timeLeft.hours < 10){\n            hoursValue.textContent = '0' + timeLeft.hours;\n        }else if (timeLeft.hours >= 10){\n            hoursValue.textContent = timeLeft.hours;\n        } else if (timeLeft.hours === 0){\n            hoursValue.textContent = '00';\n        }\n\n        if (timeLeft.minutes < 10){\n            minutesValue.textContent = '0' + timeLeft.minutes;\n        }else if (timeLeft.minutes >= 10){\n            minutesValue.textContent = timeLeft.minutes;\n        } else if (timeLeft.minutes === 0){\n            minutesValue.textContent = '00';\n        }\n\n        if (timeLeft.seconds < 10){\n            secondsValue.textContent = '0' + timeLeft.seconds;\n        }else if (timeLeft.seconds >= 10){\n            secondsValue.textContent = timeLeft.seconds;\n        } else if (timeLeft.seconds === 0){\n            secondsValue.textContent = '00';\n        }\n        \n    }, 1000);\n});\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }"],"names":["$40d383fb392a7037$var$timerButton","document","querySelector","$40d383fb392a7037$var$daysValue","$40d383fb392a7037$var$hoursValue","$40d383fb392a7037$var$minutesValue","$40d383fb392a7037$var$secondsValue","$40d383fb392a7037$var$timer","$40d383fb392a7037$var$choosedTime","$40d383fb392a7037$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","curruntTime","getTime","Notiflix","Notify","failure","disabled","flatpickr","addEventListener","clearInterval","futureTime","setInterval","timeLeftinMs","timeLeft","ms","second","minute","hour","day","days","Math","floor","hours","minutes","seconds","$40d383fb392a7037$var$convertMs","success","textContent"],"version":3,"file":"02-timer.3023e522.js.map"}
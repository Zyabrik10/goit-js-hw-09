{"mappings":"YACA,IASIA,EACAC,EAVEC,EAAcC,SAASC,cAAc,sBAGrCC,EAAYF,SAASC,cAAc,mBACnCE,EAAaH,SAASC,cAAc,oBACpCG,EAAeJ,SAASC,cAAc,sBACtCI,EAAeL,SAASC,cAAc,sBAMtCK,EAAU,CACZC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAA,SAAQC,GACJ,IAAMC,GAAc,IAAIJ,MAAOK,UAG/B,IAFAjB,EAAce,EAAc,GAAGE,YAEZD,EAGf,OAFAE,SAASC,OAAOC,QAAQ,2CACxBnB,EAAYoB,UAAW,GAI3BpB,EAAYoB,UAAW,C,GAK/BC,UAAU,mBAAoBd,GAG9BP,EAAYsB,iBAAiB,SAAS,WAC9BxB,GAAOyB,cAAczB,GACzB,IAAM0B,EAAazB,EAEnBD,EAAQ2B,aAAY,WAChB,IA6CWC,EAETC,EACAC,EACAC,EACAC,EAGAC,EAEAC,EAEAC,EAEAC,EA3DInB,GAAc,IAAIJ,MAAOK,UACzBmB,EAAeX,EAAaT,EAC5BqB,GA2CKV,EA3CgBS,EAgDzBL,EAAa,IADbD,EAAgB,IADhBD,EAAkB,IADlBD,EAAS,OAMTI,EAAOM,KAAKC,MAAMZ,EAAKI,GAEvBE,EAAQK,KAAKC,MAAMZ,EAAMI,EAAOD,GAEhCI,EAAUI,KAAKC,MAAMZ,EAAOI,EAAOD,EAAQD,GAE3CM,EAAUG,KAAKC,MAAMZ,EAAQI,EAAOD,EAAQD,EAAUD,GAErD,CAAEI,OAAMC,QAAOC,UAASC,YAzD3B,GAAIC,GAAgB,EAGhB,OAFAZ,cAAczB,QACdmB,SAASC,OAAOqB,QAAQ,iBAIxBH,EAASL,KAAO,GAChB5B,EAAUqC,YAAc,IAAMJ,EAASL,KACjCK,EAASL,MAAQ,GACvB5B,EAAUqC,YAAcJ,EAASL,KACR,IAAlBK,EAASL,OAChB5B,EAAUqC,YAAc,MAGxBJ,EAASJ,MAAQ,GACjB5B,EAAWoC,YAAc,IAAMJ,EAASJ,MAClCI,EAASJ,OAAS,GACxB5B,EAAWoC,YAAcJ,EAASJ,MACR,IAAnBI,EAASJ,QAChB5B,EAAWoC,YAAc,MAGzBJ,EAASH,QAAU,GACnB5B,EAAamC,YAAc,IAAMJ,EAASH,QACpCG,EAASH,SAAW,GAC1B5B,EAAamC,YAAcJ,EAASH,QACR,IAArBG,EAASH,UAChB5B,EAAamC,YAAc,MAG3BJ,EAASF,QAAU,GACnB5B,EAAakC,YAAc,IAAMJ,EAASF,QACpCE,EAASF,SAAW,GAC1B5B,EAAakC,YAAcJ,EAASF,QACR,IAArBE,EAASF,UAChB5B,EAAakC,YAAc,K,GAGhC,I","sources":["src/js/02-timer.js"],"sourcesContent":["// start button\nconst timerButton = document.querySelector('button[data-start]');\n\n// timer value\nconst daysValue = document.querySelector('span[data-days]');\nconst hoursValue = document.querySelector('span[data-hours]');\nconst minutesValue = document.querySelector('span[data-minutes]');\nconst secondsValue = document.querySelector('span[data-seconds]');\n\n// init timer\nlet timer;\nlet choosedTime;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const curruntTime = new Date().getTime();\n        choosedTime = selectedDates[0].getTime();\n\n        if (choosedTime <= curruntTime) {\n            Notiflix.Notify.failure(\"Please choose a date in the future\");\n            timerButton.disabled = true;\n            return;\n        }\n\n        timerButton.disabled = false;\n    },\n  };\n\n  // init date picker\nflatpickr('#datetime-picker', options);\n\n// init timer button\ntimerButton.addEventListener('click', ()=>{\n    if (timer) clearInterval(timer);\n    const futureTime = choosedTime;\n\n    timer = setInterval(()=>{\n        const curruntTime = new Date().getTime();\n        const timeLeftinMs = futureTime - curruntTime;\n        const timeLeft = convertMs(timeLeftinMs);\n\n        if (timeLeftinMs <= 0) {\n            clearInterval(timer);\n            Notiflix.Notify.success(\"Time has left\");\n            return;\n        }\n\n        if (timeLeft.days < 10){\n            daysValue.textContent = '0' + timeLeft.days;\n        }else if (timeLeft.days >= 10){\n            daysValue.textContent = timeLeft.days;\n        } else if (timeLeft.days === 0){\n            daysValue.textContent = '00';\n        }\n\n        if (timeLeft.hours < 10){\n            hoursValue.textContent = '0' + timeLeft.hours;\n        }else if (timeLeft.hours >= 10){\n            hoursValue.textContent = timeLeft.hours;\n        } else if (timeLeft.hours === 0){\n            hoursValue.textContent = '00';\n        }\n\n        if (timeLeft.minutes < 10){\n            minutesValue.textContent = '0' + timeLeft.minutes;\n        }else if (timeLeft.minutes >= 10){\n            minutesValue.textContent = timeLeft.minutes;\n        } else if (timeLeft.minutes === 0){\n            minutesValue.textContent = '00';\n        }\n\n        if (timeLeft.seconds < 10){\n            secondsValue.textContent = '0' + timeLeft.seconds;\n        }else if (timeLeft.seconds >= 10){\n            secondsValue.textContent = timeLeft.seconds;\n        } else if (timeLeft.seconds === 0){\n            secondsValue.textContent = '00';\n        }\n        \n    }, 1000);\n});\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }"],"names":["$84b9dae4df53835d$var$timer","$84b9dae4df53835d$var$choosedTime","$84b9dae4df53835d$var$timerButton","document","querySelector","$84b9dae4df53835d$var$daysValue","$84b9dae4df53835d$var$hoursValue","$84b9dae4df53835d$var$minutesValue","$84b9dae4df53835d$var$secondsValue","$84b9dae4df53835d$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","curruntTime","getTime","Notiflix","Notify","failure","disabled","flatpickr","addEventListener","clearInterval","futureTime","setInterval","ms","second","minute","hour","day","days","hours","minutes","seconds","timeLeftinMs","timeLeft","Math","floor","success","textContent"],"version":3,"file":"02-timer.45470f25.js.map"}